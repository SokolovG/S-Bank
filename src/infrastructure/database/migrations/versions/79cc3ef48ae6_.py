"""empty message

Revision ID: 79cc3ef48ae6
Revises:
Create Date: 2025-05-17 16:22:37.713372

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "79cc3ef48ae6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customer_statistics",
        sa.Column("users_by_country", sa.JSON(), nullable=False),
        sa.Column("open_bill", sa.Integer(), nullable=False),
        sa.Column("all_customers_balance", sa.Numeric(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_customer_statistics")),
    )
    op.create_table(
        "user_statistics",
        sa.Column("total_users_count", sa.Integer(), nullable=False),
        sa.Column("active_users_count", sa.Integer(), nullable=False),
        sa.Column("verified_users_count", sa.Integer(), nullable=False),
        sa.Column("blocked_users", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_statistics")),
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("blocked", sa.Boolean(), nullable=False),
        sa.Column("reason_for_blocking", sa.String(length=255), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "customers",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=255), nullable=False),
        sa.Column("last_name", sa.String(length=255), nullable=False),
        sa.Column("birth_date", sa.DateTime(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("phone", sa.String(length=255), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("fk_customers_user_id_users")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_customers")),
        sa.UniqueConstraint("user_id", name=op.f("uq_customers_user_id")),
    )
    op.create_index(op.f("ix_customers_last_name"), "customers", ["last_name"], unique=False)
    op.create_index(op.f("ix_customers_phone"), "customers", ["phone"], unique=True)
    op.create_index(op.f("ix_customers_username"), "customers", ["username"], unique=True)
    op.create_table(
        "accounts",
        sa.Column("account_number", sa.String(length=255), nullable=False),
        sa.Column("account_type", sa.Enum("CURRENT", "SAVINGS", "BUSINESS", name="accounttype"), nullable=False),
        sa.Column("currency", sa.Enum("USD", "EUR", "RUB", name="currency"), nullable=False),
        sa.Column("balance", sa.Numeric(precision=18, scale=2), nullable=False),
        sa.Column("iban", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("customer_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["customer_id"], ["customers.id"], name=op.f("fk_accounts_customer_id_customers")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_accounts")),
    )
    op.create_index(op.f("ix_accounts_account_number"), "accounts", ["account_number"], unique=True)
    op.create_index(op.f("ix_accounts_iban"), "accounts", ["iban"], unique=True)
    op.create_table(
        "balances",
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("balance_type", sa.String(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=18, scale=2), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], name=op.f("fk_balances_account_id_accounts")),
        sa.PrimaryKeyConstraint("account_id", "balance_type", "id", name=op.f("pk_balances")),
    )
    op.create_table(
        "cards",
        sa.Column("card_number", sa.String(length=255), nullable=False),
        sa.Column("card_type", sa.Enum("VIRTUAL", "PHYSICAL", "DEBIT", "CREDIT", name="cardtype"), nullable=False),
        sa.Column("exp_date", sa.Date(), nullable=False),
        sa.Column("cvv_hash", sa.String(length=255), nullable=False),
        sa.Column("is_activated", sa.Boolean(), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("daily_limit", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], name=op.f("fk_cards_account_id_accounts")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cards")),
    )
    op.create_index(op.f("ix_cards_card_number"), "cards", ["card_number"], unique=True)
    op.create_table(
        "transactions",
        sa.Column(
            "transaction_type",
            sa.Enum(
                "DEPOSIT",
                "WITHDRAWAL",
                "TRANSFER",
                "PAYMENT",
                "INTERNATIONAL_TRANSFER",
                "FEE",
                "INTEREST",
                "REFUND",
                name="transactiontype",
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Numeric(precision=18, scale=2), nullable=False),
        sa.Column("currency", sa.Enum("USD", "EUR", "RUB", name="currency"), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "COMPLETED", "FAILED", "REJECTED", "CANCELLED", "PROCESSING", name="transactionstatus"),
            nullable=False,
        ),
        sa.Column("description", sa.String(length=1000), nullable=False),
        sa.Column("source_account_id", sa.UUID(), nullable=False),
        sa.Column("destination_account_id", sa.UUID(), nullable=True),
        sa.Column("recipient_name", sa.String(length=255), nullable=True),
        sa.Column("recipient_iban", sa.String(length=255), nullable=True),
        sa.Column("swift_code", sa.String(length=255), nullable=True),
        sa.Column("transaction_date", sa.DateTime(), nullable=False),
        sa.Column("processed_date", sa.DateTime(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["destination_account_id"], ["accounts.id"], name=op.f("fk_transactions_destination_account_id_accounts")
        ),
        sa.ForeignKeyConstraint(
            ["source_account_id"], ["accounts.id"], name=op.f("fk_transactions_source_account_id_accounts")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_transactions")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions")
    op.drop_index(op.f("ix_cards_card_number"), table_name="cards")
    op.drop_table("cards")
    op.drop_table("balances")
    op.drop_index(op.f("ix_accounts_iban"), table_name="accounts")
    op.drop_index(op.f("ix_accounts_account_number"), table_name="accounts")
    op.drop_table("accounts")
    op.drop_index(op.f("ix_customers_username"), table_name="customers")
    op.drop_index(op.f("ix_customers_phone"), table_name="customers")
    op.drop_index(op.f("ix_customers_last_name"), table_name="customers")
    op.drop_table("customers")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("user_statistics")
    op.drop_table("customer_statistics")
    # ### end Alembic commands ###
